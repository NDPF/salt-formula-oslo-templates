
#
# From oslo.messaging
#

# Size of RPC connection pool. (integer value)
#rpc_conn_pool_size = 30

# The pool size limit for connections expiration policy (integer
# value)
#conn_pool_min_size = 2

# The time-to-live in sec of idle connections in the pool (integer
# value)
#conn_pool_ttl = 1200

# ZeroMQ bind address. Should be a wildcard (*), an ethernet
# interface, or IP. The "host" option should point or resolve to this
# address. (string value)
#rpc_zmq_bind_address = *

# MatchMaker driver. (string value)
# Possible values:
# redis - <No description provided>
# sentinel - <No description provided>
# dummy - <No description provided>
#rpc_zmq_matchmaker = redis

# Number of ZeroMQ contexts, defaults to 1. (integer value)
#rpc_zmq_contexts = 1

# Maximum number of ingress messages to locally buffer per topic.
# Default is unlimited. (integer value)
#rpc_zmq_topic_backlog = <None>

# Directory for holding IPC sockets. (string value)
#rpc_zmq_ipc_dir = /var/run/openstack

# Name of this node. Must be a valid hostname, FQDN, or IP address.
# Must match "host" option, if running Nova. (string value)
#rpc_zmq_host = localhost

# Number of seconds to wait before all pending messages will be sent
# after closing a socket. The default value of -1 specifies an
# infinite linger period. The value of 0 specifies no linger period.
# Pending messages shall be discarded immediately when the socket is
# closed. Positive values specify an upper bound for the linger
# period. (integer value)
# Deprecated group/name - [DEFAULT]/rpc_cast_timeout
#zmq_linger = -1

# The default number of seconds that poll should wait. Poll raises
# timeout exception when timeout expired. (integer value)
#rpc_poll_timeout = 1

# Expiration timeout in seconds of a name service record about
# existing target ( < 0 means no timeout). (integer value)
#zmq_target_expire = 300

# Update period in seconds of a name service record about existing
# target. (integer value)
#zmq_target_update = 180

# Use PUB/SUB pattern for fanout methods. PUB/SUB always uses proxy.
# (boolean value)
#use_pub_sub = false

# Use ROUTER remote proxy. (boolean value)
#use_router_proxy = false

# This option makes direct connections dynamic or static. It makes
# sense only with use_router_proxy=False which means to use direct
# connections for direct message types (ignored otherwise). (boolean
# value)
#use_dynamic_connections = false

# How many additional connections to a host will be made for failover
# reasons. This option is actual only in dynamic connections mode.
# (integer value)
#zmq_failover_connections = 2

# Minimal port number for random ports range. (port value)
# Minimum value: 0
# Maximum value: 65535
#rpc_zmq_min_port = 49153

# Maximal port number for random ports range. (integer value)
# Minimum value: 1
# Maximum value: 65536
#rpc_zmq_max_port = 65536

# Number of retries to find free port number before fail with
# ZMQBindError. (integer value)
#rpc_zmq_bind_port_retries = 100

# Default serialization mechanism for serializing/deserializing
# outgoing/incoming messages (string value)
# Possible values:
# json - <No description provided>
# msgpack - <No description provided>
#rpc_zmq_serialization = json

# This option configures round-robin mode in zmq socket. True means
# not keeping a queue when server side disconnects. False means to
# keep queue and messages even if server is disconnected, when the
# server appears we send all accumulated messages to it. (boolean
# value)
#zmq_immediate = true

# Enable/disable TCP keepalive (KA) mechanism. The default value of -1
# (or any other negative value) means to skip any overrides and leave
# it to OS default; 0 and 1 (or any other positive value) mean to
# disable and enable the option respectively. (integer value)
#zmq_tcp_keepalive = -1

# The duration between two keepalive transmissions in idle condition.
# The unit is platform dependent, for example, seconds in Linux,
# milliseconds in Windows etc. The default value of -1 (or any other
# negative value and 0) means to skip any overrides and leave it to OS
# default. (integer value)
#zmq_tcp_keepalive_idle = -1

# The number of retransmissions to be carried out before declaring
# that remote end is not available. The default value of -1 (or any
# other negative value and 0) means to skip any overrides and leave it
# to OS default. (integer value)
#zmq_tcp_keepalive_cnt = -1

# The duration between two successive keepalive retransmissions, if
# acknowledgement to the previous keepalive transmission is not
# received. The unit is platform dependent, for example, seconds in
# Linux, milliseconds in Windows etc. The default value of -1 (or any
# other negative value and 0) means to skip any overrides and leave it
# to OS default. (integer value)
#zmq_tcp_keepalive_intvl = -1

# Maximum number of (green) threads to work concurrently. (integer
# value)
#rpc_thread_pool_size = 100

# Expiration timeout in seconds of a sent/received message after which
# it is not tracked anymore by a client/server. (integer value)
#rpc_message_ttl = 300

# Wait for message acknowledgements from receivers. This mechanism
# works only via proxy without PUB/SUB. (boolean value)
#rpc_use_acks = false

# Number of seconds to wait for an ack from a cast/call. After each
# retry attempt this timeout is multiplied by some specified
# multiplier. (integer value)
#rpc_ack_timeout_base = 15

# Number to multiply base ack timeout by after each retry attempt.
# (integer value)
#rpc_ack_timeout_multiplier = 2

# Default number of message sending attempts in case of any problems
# occurred: positive value N means at most N retries, 0 means no
# retries, None or -1 (or any other negative values) mean to retry
# forever. This option is used only if acknowledgments are enabled.
# (integer value)
#rpc_retry_attempts = 3

# List of publisher hosts SubConsumer can subscribe on. This option
# has higher priority then the default publishers list taken from the
# matchmaker. (list value)
#subscribe_on =

# Size of executor thread pool when executor is threading or eventlet.
# (integer value)
# Deprecated group/name - [DEFAULT]/rpc_thread_pool_size
#executor_thread_pool_size = 64
{%- if _data.executor_thread_pool_size is defined %}
executor_thread_pool_size = {{ _data.executor_thread_pool_size }}
{%- endif %}

# Seconds to wait for a response from a call. (integer value)
#rpc_response_timeout = 60
{%- if _data.rpc_response_timeout is defined %}
rpc_response_timeout = {{ _data.rpc_response_timeout }}
{%- endif %}

# The network address and optional user credentials for connecting to
# the messaging backend, in URL format. The expected format is:
#
# driver://[user:pass@]host:port[,[userN:passN@]hostN:portN]/virtual_host?query
#
# Example: rabbit://rabbitmq:password@127.0.0.1:5672//
#
# For full details on the fields in the URL see the documentation of
# oslo_messaging.TransportURL at
# https://docs.openstack.org/oslo.messaging/latest/reference/transport.html
# (string value)
#transport_url = <None>
{%- set rabbit_port = _data.get('port', 5671 if _data.get('ssl',{}).get('enabled', False)  else 5672) %}
{%- if _data.members is defined %}
transport_url = rabbit://{% for member in _data.members -%}
                             {{ _data.user }}:{{ _data.password }}@{{ member.host }}:{{ member.get('port', rabbit_port) }}
                             {%- if not loop.last -%},{%- endif -%}
                         {%- endfor -%}
                             /{{ _data.virtual_host }}
{%- else %}
transport_url = rabbit://{{ _data.user }}:{{ _data.password }}@{{ _data.host }}:{{ rabbit_port }}/{{ _data.virtual_host }}
{%- endif %}

# DEPRECATED: The messaging driver to use, defaults to rabbit. Other
# drivers include amqp and zmq. (string value)
# This option is deprecated for removal.
# Its value may be silently ignored in the future.
# Reason: Replaced by [DEFAULT]/transport_url
#rpc_backend = rabbit

# The default exchange under which topics are scoped. May be
# overridden by an exchange name specified in the transport_url
# option. (string value)
#control_exchange = openstack
{%- if _data.control_exchange is defined %}
control_exchange = {{ _data.control_exchange }}
{%- endif %}

